DROP SCHEMA IF EXISTS JEJUISM;
CREATE SCHEMA JEJUISM;
USE JEJUISM;



-- USER 테이블 --
DROP TABLE IF EXISTS MEMBER;
CREATE TABLE MEMBER (
    NO 			INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID 			VARCHAR(30) NOT NULL UNIQUE,
    PASSWORD 	VARCHAR(100) NOT NULL,
    NAME 		VARCHAR(15) NOT NULL,
    KAKAOTOKEN	VARCHAR(1000),
    ROLE 		VARCHAR(10) DEFAULT 'ROLE_USER',
    ENROLL_DATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
    STATUS 		VARCHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N'))
);

INSERT INTO MEMBER (
    NO,
    ID,
    PASSWORD,
	NAME,
    KAKAOTOKEN,
    ROLE,
    ENROLL_DATE,
    STATUS
) VALUES(
    0, 
    'admin',
    '1212',
    '관리자',
	DEFAULT,
    'ROLE_ADMIN',
    DEFAULT,
    DEFAULT
);

COMMIT;
SELECT * FROM MEMBER;



-- BOARD --
DROP TABLE IF EXISTS BOARD;
CREATE TABLE BOARD (		
	NO 							INT AUTO_INCREMENT,
	WRITER_NO 					INT, 
	WRITER_Id					VARCHAR(100),
	TITLE 						VARCHAR(50), 
	CONTENT 					VARCHAR(2000), 
	ORIGINAL_FILENAME 			VARCHAR(100), 
	RENAMED_FILENAME 			VARCHAR(100), 
	READCOUNT 					INT DEFAULT 0, 
	STATUS 						VARCHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')),
	TYPE						VARCHAR(100),
	CREATE_DATE 				DATETIME  DEFAULT CURRENT_TIMESTAMP, 
	MODIFY_DATE 				DATETIME  DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT PK_BOARD_NO PRIMARY KEY(NO),
	CONSTRAINT FK_BOARD_WRITER FOREIGN KEY(WRITER_NO) REFERENCES MEMBER(NO) ON DELETE SET NULL
); 

INSERT INTO BOARD VALUES(0, 1, '[판매] 애플 노트북 팔아요.',  '노트북 맥북 최신입니다. 게임하시면 안됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 삼성 노트북 팔아요.',  '삼성 노트북 팝니다. 터치 됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 아이폰 팔아요.',  '아이폰13 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 갤럭시 팔아요.',  '갤럭시 플립3 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 애플 노트북 삽니다.',  '맥북 게임용으로 삽니다. 이거 게임 잘돌아가나요?', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 삼성 노트북 삽니다.',  '삼성 노트북 삽니다. 아이폰 개발하려 삽니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 아이폰 삽니다.',  '아이폰3사요. 30만원에 네고합니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 갤럭시 삽니다.',  '갤럭시 삽니다. 아무 기종이나 상관없어요. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 애플 노트북 팔아요.',  '노트북 맥북 최신입니다. 게임하시면 안됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 삼성 노트북 팔아요.',  '삼성 노트북 팝니다. 터치 됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 아이폰 팔아요.',  '아이폰13 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 갤럭시 팔아요.',  '갤럭시 플립3 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 애플 노트북 삽니다.',  '맥북 게임용으로 삽니다. 이거 게임 잘돌아가나요?', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 삼성 노트북 삽니다.',  '삼성 노트북 삽니다. 아이폰 개발하려 삽니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 아이폰 삽니다.',  '아이폰3사요. 30만원에 네고합니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 갤럭시 삽니다.',  '갤럭시 삽니다. 아무 기종이나 상관없어요. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 애플 노트북 팔아요.',  '노트북 맥북 최신입니다. 게임하시면 안됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 삼성 노트북 팔아요.',  '삼성 노트북 팝니다. 터치 됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 아이폰 팔아요.',  '아이폰13 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 갤럭시 팔아요.',  '갤럭시 플립3 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 애플 노트북 삽니다.',  '맥북 게임용으로 삽니다. 이거 게임 잘돌아가나요?', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 삼성 노트북 삽니다.',  '삼성 노트북 삽니다. 아이폰 개발하려 삽니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 아이폰 삽니다.',  '아이폰3사요. 30만원에 네고합니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 갤럭시 삽니다.',  '갤럭시 삽니다. 아무 기종이나 상관없어요. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);

COMMIT;
SELECT * FROM BOARD;



-- REPLY --
DROP TABLE IF EXISTS REPLY;
CREATE TABLE REPLY(
  NO 			INT PRIMARY KEY AUTO_INCREMENT,
  BOARD_NO 		INT,
  WRITER_NO 	INT,
  WRITER		VARCHAR(15),
  CONTENT 		VARCHAR(400),
  STATUS 		VARCHAR(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
  CREATE_DATE 	DATETIME DEFAULT CURRENT_TIMESTAMP,
  MODIFY_DATE 	DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY(BOARD_NO) REFERENCES BOARD(NO),
  FOREIGN KEY(WRITER_NO) REFERENCES MEMBER(NO)
);

INSERT INTO REPLY VALUES(0, 1, 1, '홍길동', '안녕하세요.', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REPLY VALUES(0, 1, 1, '홍길동', '반갑습니다.', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REPLY VALUES(0, 2, 1, '홍길동', '안녕하세요.', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REPLY VALUES(0, 2, 1, '홍길동', '반갑습니다.', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REPLY VALUES(0, 3, 1, '홍길동', '안녕하세요.', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REPLY VALUES(0, 3, 1, '홍길동', '반갑습니다.', DEFAULT, DEFAULT, DEFAULT);

COMMIT;
SELECT * FROM REPLY;



-- VISIT_JEJU--
DROP TABLE IF EXISTS VISIT_JEJU;
CREATE TABLE VISIT_JEJU(
	NO				INT PRIMARY KEY AUTO_INCREMENT,
	ALLTAG			VARCHAR(500),
	CODE			VARCHAR(10),
	TITLE			VARCHAR(100),
	SI				VARCHAR(10),
	GU				VARCHAR(10),
	ADDRESS			VARCHAR(100),
	ROADADDRESS		VARCHAR(100),
	TAG				VARCHAR(500),
	INTRODUCTION	VARCHAR(500),
	LATITUDE		DOUBLE,
	LONGITUDE		DOUBLE,
	POSTCODE		VARCHAR(10),
	PHONENO			VARCHAR(50),
	IMGPATH			VARCHAR(100),
	AVG_RATE		DOUBLE
);
-- INSERT INTO VISIT_JEJU VALUES(0, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
COMMIT;
SELECT * FROM VISIT_JEJU;
SELECT * FROM VISIT_JEJU WHERE CODE LIKE "%축제%";
-- SELECT * FROM VISIT_JEJU WHERE (ALLTAG LIKE '%힐링%' OR TITLE LIKE '%힐링%' OR TAG LIKE '%힐링%') AND CODE LIKE '관광지';
-- SELECT * FROM VISIT_JEJU WHERE (1=1 AND CODE = '숙박') ORDER BY NO ASC; 
/*
SELECT  
	V.NO, V.ALLTAG, V.TITLE, V.ADDRESS, V.ROADADDRESS, V.TAG, V.INTRODUCTION, V.PHONENO, V.IMGPATH, V.AVG_RATE,
	R.NO AS R_NO, 
	R.VNO AS R_VNO, 
	R.CONTENT  AS R_CONTENT, 
	U.NAME AS R_NAME, 
	R.CREATE_DATE AS R_CREATE_DATE, 
	R.MODIFY_DATE AS R_MODIFY_DATE
FROM VISIT_JEJU V
LEFT OUTER JOIN REVIEW R ON (V.NO = R.VNO)
LEFT OUTER JOIN USER U ON (R.UNO = U.NO)
WHERE V.NO = 5;
*/

SELECT * FROM VISIT_JEJU
WHERE CODE = '관광지'
AND TITLE NOT LIKE '%박물관%'
AND TITLE NOT LIKE '%미술관%'
AND TITLE NOT LIKE '%전시관%'
AND ALLTAG NOT LIKE '%박물관%'
AND ALLTAG NOT LIKE '%미술관%'
AND ALLTAG NOT LIKE '%전시관%'
AND TAG NOT LIKE '%박물관%'
AND TAG NOT LIKE '%미술관%'
AND TAG NOT LIKE '%전시관%'
AND INTRODUCTION NOT LIKE '%박물관%'
AND INTRODUCTION NOT LIKE '%미술관%'
AND INTRODUCTION NOT LIKE '%전시관%'
ORDER BY NO ASC LIMIT 10 OFFSET 20;





-- REVIEW --
DROP TABLE IF EXISTS REVIEW;
CREATE TABLE REVIEW(
	NO 			INT PRIMARY KEY AUTO_INCREMENT,
    VNO			INT,
    UNO 		INT,
    RATE		double,
    CONTENT		VARCHAR(1000),
    CREATE_DATE	DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFY_DATE	DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY(VNO) REFERENCES VISIT_JEJU(NO),
    FOREIGN KEY(UNO) REFERENCES MEMBER(NO)
);
-- INSERT INTO REVIEW VALUES(0, ?, ?, ?, ?, DEFAULT)
COMMIT;
SELECT * FROM REVIEW;


INSERT INTO REVIEW VALUES(0, 2, 2, 4, '이번에 다녀왔는데 진짜 예뻐요', DEFAULT, DEFAULT);
INSERT INTO REVIEW VALUES(0, 2, 2, 5, '이번에 다녀왔는데 진짜 예뻐요1111', DEFAULT, DEFAULT);
INSERT INTO REVIEW VALUES(0, 2, 2, 3, '이번에 다녀왔는데 진짜 예뻐요2222', DEFAULT, DEFAULT);
INSERT INTO REVIEW VALUES(0, 2, 2, 4, '이번에 다녀왔는데 진짜 예뻐요3333', DEFAULT, DEFAULT);
INSERT INTO REVIEW VALUES(0, 2, 2, 4, '이번에 다녀왔는데 진짜 예뻐요4444', DEFAULT, DEFAULT);


SELECT COALESCE(AVG(RATE),0) FROM REVIEW WHERE VNO = 1155;

-- SELECT R.NO, R.VNO, R.UNO, R.CONTENT, R.RATE, R.CREATE_DATE, U.NAME, V.TITLE  
-- FROM REVIEW R, USER U, VISIT_JEJU V
-- WHERE R.VNO = V.NO AND R.UNO = U.NO;



-- FLIGHT --
DROP TABLE IF EXISTS FLIGHT;
CREATE TABLE FLIGHT(
	AIRLINE_KOREAN 			VARCHAR(50),
    STARTCITY 				VARCHAR(40),
    ARRIVALCITY 			VARCHAR(40),
    DOMESTIC_START_TIME 	VARCHAR(20),
    DOMESTIC_ARRIVAL_TIME 	DATETIME,
    DOMESTIC_STDATE 		DATETIME,
    DOMESTIC_EDDATE 		DATETIME,
    DOMESTIC_MON 			VARCHAR(2),
    DOMESTIC_TUE 			VARCHAR(2),
    DOMESTIC_WED 			VARCHAR(2),
    DOMESTIC_THU 			VARCHAR(2),
    DOMESTIC_FRI 			VARCHAR(2),
    DOMESTIC_SAT 			VARCHAR(2),
    DOMESTIC_SUN 			VARCHAR(2),
    DOMESTIC_NUM 			VARCHAR(20)
);
-- INSERT INTO FLIGHT VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
-- SELECT * FROM FLIGHT WHERE ARR_AIRPORT=? AND START_DATE AND END_DATE
COMMIT;
SELECT * FROM FLIGHT;



-- FESTIVAL --
DROP TABLE IF EXISTS FESTIVAL;
CREATE TABLE FESTIVAL(
	NO INT PRIMARY KEY AUTO_INCREMENT,
	FSTVL_NM VARCHAR(300),
	OPAR VARCHAR(300),
    FSTVL_START_DATE DATETIME,
    FSTVL_END_DATE DATETIME,
    FESTVL_CO VARCHAR(300),
    MNNST VARCHAR(300),
    AUSPC_INSTT VARCHAR(300),
    SUPRT_INSTT VARCHAR(300),
    PHONE_NUMBER VARCHAR(300),
    HOMEPAGE_URL VARCHAR(300),
    RDNMADR VARCHAR(300),
    LNMADR VARCHAR(300),
    LATITUDE VARCHAR(300),
    LONGITUDE VARCHAR(300)
);
-- INSERT INTO EXHIBITION VALUES(0, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
COMMIT;
SELECT * FROM FESTIVAL;
-- SELECT COUNT(*) FROM FESTIVAL;
SELECT * FROM FESTIVAL WHERE FSTVL_END_DATE > '2023-01-02';
-- MONTH(date) - 주어진 date에서 월에 해당하는 숫자를 반환(0~12)



-- QUERY --


-- MEMBER --
-- 멤버 조회
-- SELECT * FROM MEMBER WHERE ID=? AND STATUS='Y'

-- 멤버 추가
-- INSERT INTO MEMBER VALUES(0,?,?,?,?,DEFAULT,DEFAULT,DEFAULT)

-- 멤버 수정(아마 필요x)
-- UPDATE MEMBER SET NAME=?,MODIFY_DATE=CURRENT_TIMESTAMP, WHERE NO=?

-- 멤버 패스워드 변경
-- UPDATE MEMBER SET PASSWORD=? WHERE NO=?

-- 멤버 삭제
-- UPDATE MEMBER SET STATUS=? WHERE NO=?



-- BOARD --
-- 총 게시글 갯수
-- SELECT COUNT(*) FROM BOARD WHERE STATUS='Y'

-- 조회수 증가
-- UPDATE BOARD SET READCOUNT=? WHERE NO=?

-- 게시글 작성
-- INSERT INTO BOARD VALUES(0,?,?,?,?,?,DEFAULT,DEFAULT,DEFAULT,DEFAULT)

-- 게시글 수정
-- UPDATE BOARD SET TITLE=?,CONTENT=?,ORIGINAL_FILENAME=?,RENAMED_FILENAME=?,MODIFY_DATE=CURRENT_TIMESTAMP, WHERE NO=?

-- 게시글 삭제
-- UPDATE BOARD SET STATUS=? WHERE NO=?

-- 상세 조회
/*
SELECT  B.NO, B.TITLE, M.ID, B.READCOUNT, B.ORIGINAL_FILENAME, B.RENAMED_FILENAME, B.CONTENT, B.CREATE_DATE, B.MODIFY_DATE
FROM BOARD B
JOIN MEMBER M ON(B.WRITER_NO = M.NO)
WHERE B.STATUS = 'Y' AND B.NO=1
*/


-- 목록 조회(페이징) 쿼리
/*
SELECT  B.NO, B.TITLE, M.ID, B.CREATE_DATE, B.ORIGINAL_FILENAME, B.READCOUNT, B.STATUS
FROM BOARD B JOIN MEMBER M ON(B.WRITER_NO = M.NO) 
WHERE B.STATUS = 'Y' 
ORDER BY B.NO DESC LIMIT 10 OFFSET 0;
*/
  


-- REPLY --
-- INSERT INTO REPLY VALUES(0, ?, ?, ?, ?, DEFAULT, DEFAULT, DEFAULT)


-- 한 게시판에 해당하는 댓글 리스트 조회용 쿼리문
/*
SELECT R.NO, R.BOARD_NO, R.CONTENT, M.ID, R.CREATE_DATE, R.MODIFY_DATE
FROM REPLY R
JOIN MEMBER M ON(R.WRITER_NO = M.NO)
WHERE R.STATUS='Y' AND BOARD_NO= ? 
ORDER BY R.NO DESC;
*/


/*
SELECT * FROM REPLY;
DELETE FROM REPLY WHERE NO=5
*/


-- 검색 + 쿼리문
/*
SELECT  B.NO, B.TITLE, M.ID, B.CREATE_DATE, B.ORIGINAL_FILENAME, B.READCOUNT, B.STATUS
FROM BOARD B JOIN MEMBER M ON(B.WRITER_NO = M.NO) 
WHERE 1 = 1 
AND B.STATUS = 'Y'
AND M.ID LIKE '%admin%' 
AND B.TITLE LIKE '%구매%' 
AND B.CONTENT LIKE '%아이폰%' 
ORDER BY B.NO DESC LIMIT ? OFFSET ?;
*/

/*
SELECT  COUNT(*)
FROM BOARD B
JOIN MEMBER M ON(B.WRITER_NO = M.NO)
WHERE 1=1
    AND B.STATUS = 'Y'
--	AND M.ID LIKE '%admin%' 
--	AND B.TITLE LIKE '%구매%' 
	AND B.CONTENT LIKE '%아이폰%' 
*/
