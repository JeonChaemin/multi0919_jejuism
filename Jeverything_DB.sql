DROP SCHEMA IF EXISTS JEVERYTHING;
CREATE SCHEMA JEVERYTHING;
USE JEVERYTHING;



-- USER 테이블 --
CREATE TABLE USER (
    NO 			INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID 			VARCHAR(30) NOT NULL UNIQUE,
    PASSWORD 	VARCHAR(100) NOT NULL,
    NAME 		VARCHAR(15) NOT NULL,
    KAKAOTOKEN	VARCHAR(1000),
    ROLE 		VARCHAR(10) DEFAULT 'ROLE_USER',
    ENROLL_DATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
    STATUS 		VARCHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N'))
);

INSERT INTO USER (
    NO,
    ID,
    PASSWORD,
	NAME,
    KAKAOTOKEN,
    ROLE,
    ENROLL_DATE,
    STATUS
) VALUES(
    0, 
    'admin',
    '1212',
    '관리자',
	DEFAULT,
    'ROLE_ADMIN',
    DEFAULT,
    DEFAULT
);

COMMIT;
SELECT * FROM USER;



-- BOARD --
CREATE TABLE BOARD (	
    NO 					INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    WRITER_NO 			INT,
	TITLE 				VARCHAR(50),
	CONTENT 			VARCHAR(2000),
	TYPE 				VARCHAR(100),
	ORIGINAL_FILENAME 	VARCHAR(100),
	RENAMED_FILENAME 	VARCHAR(100),
	READCOUNT 			INT DEFAULT 0,
    STATUS 				VARCHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')),
    CREATE_DATE 		DATETIME  DEFAULT CURRENT_TIMESTAMP,
    MODIFY_DATE 		DATETIME  DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY(WRITER_NO) REFERENCES USER(NO)
);

INSERT INTO BOARD VALUES(0, 1, '[판매] 애플 노트북 팔아요.',  '노트북 맥북 최신입니다. 게임하시면 안됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 삼성 노트북 팔아요.',  '삼성 노트북 팝니다. 터치 됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 아이폰 팔아요.',  '아이폰13 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 갤럭시 팔아요.',  '갤럭시 플립3 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 애플 노트북 삽니다.',  '맥북 게임용으로 삽니다. 이거 게임 잘돌아가나요?', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 삼성 노트북 삽니다.',  '삼성 노트북 삽니다. 아이폰 개발하려 삽니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 아이폰 삽니다.',  '아이폰3사요. 30만원에 네고합니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 갤럭시 삽니다.',  '갤럭시 삽니다. 아무 기종이나 상관없어요. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 애플 노트북 팔아요.',  '노트북 맥북 최신입니다. 게임하시면 안됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 삼성 노트북 팔아요.',  '삼성 노트북 팝니다. 터치 됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 아이폰 팔아요.',  '아이폰13 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 갤럭시 팔아요.',  '갤럭시 플립3 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 애플 노트북 삽니다.',  '맥북 게임용으로 삽니다. 이거 게임 잘돌아가나요?', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 삼성 노트북 삽니다.',  '삼성 노트북 삽니다. 아이폰 개발하려 삽니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 아이폰 삽니다.',  '아이폰3사요. 30만원에 네고합니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 갤럭시 삽니다.',  '갤럭시 삽니다. 아무 기종이나 상관없어요. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 애플 노트북 팔아요.',  '노트북 맥북 최신입니다. 게임하시면 안됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 삼성 노트북 팔아요.',  '삼성 노트북 팝니다. 터치 됩니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 아이폰 팔아요.',  '아이폰13 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[판매] 갤럭시 팔아요.',  '갤럭시 플립3 팝니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 애플 노트북 삽니다.',  '맥북 게임용으로 삽니다. 이거 게임 잘돌아가나요?', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 삼성 노트북 삽니다.',  '삼성 노트북 삽니다. 아이폰 개발하려 삽니다.', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 아이폰 삽니다.',  '아이폰3사요. 30만원에 네고합니다. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO BOARD VALUES(0, 1, '[구매] 갤럭시 삽니다.',  '갤럭시 삽니다. 아무 기종이나 상관없어요. ', 'B1', '원본파일명.txt', '변경된파일명.txt', DEFAULT, 'Y', DEFAULT, DEFAULT);

COMMIT;
SELECT * FROM BOARD;



-- REPLY --
CREATE TABLE REPLY(
  NO 			INT PRIMARY KEY AUTO_INCREMENT,
  BOARD_NO 		INT,
  WRITER_NO 	INT,
  WRITER		VARCHAR(15),
  CONTENT 		VARCHAR(400),
  STATUS 		VARCHAR(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
  CREATE_DATE 	DATETIME DEFAULT CURRENT_TIMESTAMP,
  MODIFY_DATE 	DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY(BOARD_NO) REFERENCES BOARD(NO),
  FOREIGN KEY(WRITER_NO) REFERENCES USER(NO)
);

INSERT INTO REPLY VALUES(0, 1, 1, '홍길동', '안녕하세요.', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REPLY VALUES(0, 1, 1, '홍길동', '반갑습니다.', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REPLY VALUES(0, 2, 1, '홍길동', '안녕하세요.', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REPLY VALUES(0, 2, 1, '홍길동', '반갑습니다.', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REPLY VALUES(0, 3, 1, '홍길동', '안녕하세요.', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REPLY VALUES(0, 3, 1, '홍길동', '반갑습니다.', DEFAULT, DEFAULT, DEFAULT);

COMMIT;
SELECT * FROM REPLY;



-- VISIT_JEJU--
CREATE TABLE VISIT_JEJU(
	NO				INT PRIMARY KEY AUTO_INCREMENT,
	ALLTAG			VARCHAR(500),
	CODE			VARCHAR(10),
	TITLE			VARCHAR(100),
	SI				VARCHAR(10),
	GU				VARCHAR(10),
	ADDRESS			VARCHAR(100),
	ROADADDRESS		VARCHAR(100),
	TAG				VARCHAR(500),
	INTRODUCTION	VARCHAR(500),
	LATITUDE		DOUBLE,
	LONGITUDE		DOUBLE,
	POSTCODE		VARCHAR(10),
	PHONENO			VARCHAR(50),
	IMGPATH			VARCHAR(100),
	AVG_RATE		double
);
-- INSERT INTO VISIT_JEJU VALUES(0, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
COMMIT;
SELECT * FROM VISIT_JEJU;
SELECT * FROM VISIT_JEJU WHERE CODE LIKE "숙소";



-- REVIEW --
DROP TABLE IF EXISTS REVIEW;
CREATE TABLE REVIEW(
	NO 			INT PRIMARY KEY AUTO_INCREMENT,
    VNO			INT,
    UNO 		INT,
    RATE		double,
    CONTENT		VARCHAR(1000),
    CREATE_DATE	DATETIME,
    MODIFY_DATE	DATETIME,
    FOREIGN KEY(VNO) REFERENCES VISIT_JEJU(NO),
    FOREIGN KEY(UNO) REFERENCES USER(NO)
);
-- INSERT INTO REVIEW VALUES(0, ?, ?, ?, ?, DEFAULT)
COMMIT;
SELECT * FROM REVIEW;

-- INSERT INTO REVIEW(NO, VNO, UNO, RATE, CONTENT) 
-- VALUES(0, 1, 1, 4.5, '이번에 다녀왔는데 진짜 예뻐요');

-- SELECT R.NO, R.VNO, R.UNO, R.CONTENT, R.RATE, R.CREATE_DATE, U.NAME, V.TITLE  
-- FROM REVIEW R, USER U, VISIT_JEJU V
-- WHERE R.VNO = V.NO AND R.UNO = U.NO;

CREATE TABLE TEMP (
	REGID INT,
	TAMIN3 INT,
	TAMIN3LOW INT,
	TAMIN3HIGH INT,
	TAMAX3 INT,
	TAMAX3LOW INT,
	TAMAX3HIGH INT,
	TAMIN4 INT,
	TAMIN4LOW INT,
	TAMIN4HIGH INT,
	TAMAX4 INT,
	TAMAX4LOW INT,
	TAMAX4HIGH INT,
	TAMIN5 INT,
	TAMIN5LOW INT,
	TAMIN5HIGH INT,
	TAMAX5 INT,
	TAMAX5LOW INT,
	TAMAX5HIGH INT,
	TAMIN6 INT,
	TAMIN6LOW INT,
	TAMIN6HIGH INT,
	TAMAX6 INT,
	TAMAX6LOW INT,
	TAMAX6HIGH INT,
	TAMIN7 INT,
	TAMIN7LOW INT,
	TAMIN7HIGH INT,
	TAMAX7 INT,
	TAMAX7LOW INT,
	TAMAX7HIGH INT,
	TAMIN8 INT,
	TAMIN8LOW INT,
	TAMIN8HIGH INT,
	TAMAX8 INT,
	TAMAX8LOW INT,
	TAMAX8HIGH INT,
	TAMIN9 INT,
	TAMIN9LOW INT,
	TAMIN9HIGH INT,
	TAMAX9 INT,
	TAMAX9LOW INT,
	TAMAX9HIGH INT
);
-- INSERT INTO TEMP VALUES(0, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
COMMIT;
SELECT * FROM TEMP;



-- FLIGHT --
CREATE TABLE FLIGHT(
	MODEL VARCHAR(30),
	ARR_AIRPORT VARCHAR(50),
	ARR_TIME VARCHAR(50),
	START_DATE VARCHAR(50),
	FLIGHT_DAY VARCHAR(50),
	END_DATE VARCHAR(50),
	DEP_AIRPORT VARCHAR(50),
	DEP_TIME VARCHAR(50),
	FLIGHT_NO VARCHAR(50),
	AIRLINE VARCHAR(50)
);
-- INSERT INTO FLIGHT VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
-- SELECT * FROM FLIGHT WHERE ARR_AIRPORT=? AND START_DATE AND END_DATE
COMMIT;
SELECT * FROM FLIGHT;



-- EXHIBITION --
CREATE TABLE EXHIBITION(
	SEQ INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    TITLE VARCHAR(10),
    CATEGORY INT,
    CATEGORYNAME VARCHAR(100),
    COVER VARCHAR(200),
    COVERTHUMB VARCHAR(200),
    START_EX VARCHAR(100),
	END_EX VARCHAR(100),
    HOUR VARCHAR(100),
    PAY VARCHAR(100),
    LOCS INT,
    LOCNAMES VARCHAR(100),
    OWNER VARCHAR(100),
    TEL  VARCHAR(100),
    STAT VARCHAR(100),
    DIVNAME VARCHAR(100)
);
-- INSERT INTO EXHIBITION VALUES(0, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
COMMIT;
SELECT * FROM EXHIBITION;



-- QUERY --


-- MEMBER --
-- 멤버 조회
-- SELECT * FROM MEMBER WHERE ID=? AND STATUS='Y'

-- 멤버 추가
-- INSERT INTO MEMBER VALUES(0,?,?,?,?,DEFAULT,DEFAULT,DEFAULT)

-- 멤버 수정(아마 필요x)
-- UPDATE MEMBER SET NAME=?,MODIFY_DATE=CURRENT_TIMESTAMP, WHERE NO=?

-- 멤버 패스워드 변경
-- UPDATE MEMBER SET PASSWORD=? WHERE NO=?

-- 멤버 삭제
-- UPDATE MEMBER SET STATUS=? WHERE NO=?



-- BOARD --
-- 총 게시글 갯수
-- SELECT COUNT(*) FROM BOARD WHERE STATUS='Y'

-- 조회수 증가
-- UPDATE BOARD SET READCOUNT=? WHERE NO=?

-- 게시글 작성
-- INSERT INTO BOARD VALUES(0,?,?,?,?,?,DEFAULT,DEFAULT,DEFAULT,DEFAULT)

-- 게시글 수정
-- UPDATE BOARD SET TITLE=?,CONTENT=?,ORIGINAL_FILENAME=?,RENAMED_FILENAME=?,MODIFY_DATE=CURRENT_TIMESTAMP, WHERE NO=?

-- 게시글 삭제
-- UPDATE BOARD SET STATUS=? WHERE NO=?

-- 상세 조회
/*
SELECT  B.NO, B.TITLE, M.ID, B.READCOUNT, B.ORIGINAL_FILENAME, B.RENAMED_FILENAME, B.CONTENT, B.CREATE_DATE, B.MODIFY_DATE
FROM BOARD B
JOIN MEMBER M ON(B.WRITER_NO = M.NO)
WHERE B.STATUS = 'Y' AND B.NO=1
*/


-- 목록 조회(페이징) 쿼리
/*
SELECT  B.NO, B.TITLE, M.ID, B.CREATE_DATE, B.ORIGINAL_FILENAME, B.READCOUNT, B.STATUS
FROM BOARD B JOIN MEMBER M ON(B.WRITER_NO = M.NO) 
WHERE B.STATUS = 'Y' 
ORDER BY B.NO DESC LIMIT 10 OFFSET 0;
*/
  


-- REPLY --
-- INSERT INTO REPLY VALUES(0, ?, ?, ?, ?, DEFAULT, DEFAULT, DEFAULT)


-- 한 게시판에 해당하는 댓글 리스트 조회용 쿼리문
/*
SELECT R.NO, R.BOARD_NO, R.CONTENT, M.ID, R.CREATE_DATE, R.MODIFY_DATE
FROM REPLY R
JOIN MEMBER M ON(R.WRITER_NO = M.NO)
WHERE R.STATUS='Y' AND BOARD_NO= ? 
ORDER BY R.NO DESC;
*/


/*
SELECT * FROM REPLY;
DELETE FROM REPLY WHERE NO=5
*/


-- 검색 + 쿼리문
/*
SELECT  B.NO, B.TITLE, M.ID, B.CREATE_DATE, B.ORIGINAL_FILENAME, B.READCOUNT, B.STATUS
FROM BOARD B JOIN MEMBER M ON(B.WRITER_NO = M.NO) 
WHERE 1 = 1 
AND B.STATUS = 'Y'
AND M.ID LIKE '%admin%' 
AND B.TITLE LIKE '%구매%' 
AND B.CONTENT LIKE '%아이폰%' 
ORDER BY B.NO DESC LIMIT ? OFFSET ?;
*/

/*
SELECT  COUNT(*)
FROM BOARD B
JOIN MEMBER M ON(B.WRITER_NO = M.NO)
WHERE 1=1
    AND B.STATUS = 'Y'
--	AND M.ID LIKE '%admin%' 
--	AND B.TITLE LIKE '%구매%' 
	AND B.CONTENT LIKE '%아이폰%' 
*/
